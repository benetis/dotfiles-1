#!/bin/sh

set -o noclobber
set -o errexit
set -o nounset

[ -n "$(git status --porcelain)" ] && { echo >&2 "error: working directory not clean, exiting" ; exit 1 ; }

previous_ref="$(git symbolic-ref --short HEAD 2>/dev/null || git rev-parse HEAD)"

git checkout master

git fetch --all --prune

git merge --ff-only

# DOUBT: do we really want to delete all merged branches?

git branch --merged=master | grep -Ev '^\*\s|\smaster$' | sed -Ee 's/^\s+|\s+$//g' | while IFS= read -r local_branch ; do
  upstream="$(git for-each-ref --format="%(upstream:short)" "refs/heads/$local_branch")"

  if git show-ref --verify --quiet "refs/remotes/$upstream" ; then
    upstream_remote="$(echo "$upstream" | sed -Ee 's/^([^\/]+)\/(.*)$/\1/')"
    upstream_branch="$(echo "$upstream" | sed -Ee 's/^([^\/]+)\/(.*)$/\2/')"
    git push "$upstream_remote" ":$upstream_branch" || true
  fi
  git branch -d "$local_branch"
done

[ -n "$previous_ref" ] && git rev-parse "$previous_ref" >/dev/null 2>&1 && git checkout "$previous_ref" || true
