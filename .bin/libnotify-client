#!/usr/bin/perl -w

# based on https://github.com/itsamenathan/libnotify-over-ssh

use strict;
use warnings;

use IO::Socket::INET;

my $HOST = '127.0.0.1';
my $PORT = '1216';

my $msg = '';
my $expect;

if (($#ARGV == 0) && ($ARGV[0] eq '--ping')) {
  $msg = "ping\n";
  $expect = "pong";
}
elsif (($#ARGV == 3) && ($ARGV[0] eq '--notify')) {
  my $tag = $ARGV[1];
  my $summary = $ARGV[2];
  my $body  = $ARGV[3];
  $msg = "notify\n${ARGV[1]}\n${ARGV[2]}\n${ARGV[3]}\n";
  $expect = "ok";
}
else {
  print STDERR "Usage:\n  libnotify-client --ping\n  libnotify-client --notify <tag> <summary> <body>\n";
  exit 1;
}

if ($msg) {
  eval {
    local $SIG{ALRM} = sub { die 'timeout'; };
    alarm 3; # 3 seconds time-out for ALL communication
    my $sock = IO::Socket::INET->new('PeerAddr' => $HOST, 'PeerPort' => $PORT, 'Proto' => 'tcp') or die 'connect';

    $sock->autoflush(1);
    print $sock $msg;
    my $resp = <$sock>;
    close $sock;

    $resp =~ s/\s+$//g;
    die 'invalid' unless ($resp eq $expect);
    alarm 0;
  };
  alarm 0;
  exit 1 if ($@);
}
